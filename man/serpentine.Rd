% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/serpentine.R
\name{serpentine}
\alias{serpentine}
\title{Perform serpentine sorts on multiple variables.}
\usage{
serpentine(data = NULL, ...)
}
\arguments{
\item{data}{is the data.frame to be sorted}

\item{...}{are the variables to serpentine sort, in the given order. That is,
the first variable listed will be sorted in ascending order, the second
variable will alternate between ascending and descending order by the value
of the first variable, and so on.}
}
\value{
A data.frame with equal size as the original data, but sorted
  differently.
}
\description{
\code{serpentine} sorts data in a serpentine fashion (alternating between
  ascending and descending orders). This is helpful in complex sampling
  designs with implicit stratification, as it reduces the variation in the
  stratified outcome for adjacent sampled units and thus reduces the overall
  sampling error. Serpentine sorts are commonly used in NCES surveys.
}
\examples{
serpentine(data = mtcars, cyl, mpg)
serpentine(data = mtcars, cyl, vs, mpg)

# If you only want to serpentine sort the mpg variable but keep the rest of
# the variables in descending order, then create a new group index variable
# with your specified non-serpentined sorted variables.
# Following example uses pipelines and dplyr
library(magrittr)
library(dplyr)
mtcars \%>\%
  mutate(group_num = group_indices(., cyl, vs)) \%>\%
  serpentine(group_num, mpg)

}
